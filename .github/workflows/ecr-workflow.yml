name: Build and Publish Docker Image

on:
  push:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: demeter
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY_TRAVIS_USER }}
  AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BRANCH_NAME: ${{ github.head_ref }}
  IMAGE_TAG: ${{ github.sha }}

#   env:
#     AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
#     AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#     AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}

jobs:
  aws-ecr:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Register SSH key(s) for private dependencies
        # Make sure the @v0.8.0 matches the current version of the action (https://github.com/marketplace/actions/webfactory-ssh-agent)
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ env.SSH_KEY }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

    #   - name: Docker Build
    #     id: docker-build
    #     env:
    #       REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     run: docker build . -t $REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_SLUG --build-arg SSH_PRIVATE_KEY="${{ env.SSH_KEY }}"

      - name: Docker Compose
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./docker-compose.yml"
        #   down-flags: "--volumes"
          up-flags: "--build"
          services: |
            postgres
            python
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            # ECR_REPOSITORY: ${ECR_REPOSITORY}
            # GITHUB_REF_SLUG: ${GITHUB_REF_SLUG}
            SSH_PRIVATE_KEY: "${{ env.SSH_KEY }}"

      - name: Docker Run
        id: docker-run
        # env:
        #   REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run:
          docker compose run $REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_SLUG $ECR_REPOSITORY --help

      - name: Docker Push
        id: docker-push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker compose push $REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_SLUG